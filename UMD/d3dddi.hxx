#ifndef _D3DDDI_HXX_
#define _D3DDDI_HXX_

//TODO: Direct3D and DXVA DDI stuff goes here, refer to rosumd.dll source

#define D3D_UMD_INTERFACE_VERSION D3D_UMD_INTERFACE_VERSION_WDDM2_6_4
#define D3D10PSGP //Rasterisation

#ifndef PAGE_SIZE
#define PAGE_SIZE 0x1000
#endif
#ifndef ROUND_TO_PAGES
#define ROUND_TO_PAGES(Size)  (((ULONG_PTR)(Size) + PAGE_SIZE - 1) & ~(PAGE_SIZE - 1))
#endif
#include <windef.h>
#include <wingdi.h>
typedef _Return_type_success_(return >= 0) LONG NTSTATUS;
#pragma warning(push)
#pragma warning(disable : 4201)
#include <d3d10umddi.h>
#include <d3d11.h>
#pragma warning(pop)

#include <stdio.h>
#include <math.h>
#include <wdf.h>
#pragma comment(lib, "msvcrt.lib")

//D3DDDI_OPEN_PATCH (Undocumented) - Patches all callbacks to Direct3D in one go for OpenAdapter10_2()
typedef VOID WINAPI D3DDDI_OPEN_PATCH(D3D10DDIARG_OPENADAPTER& Info);
typedef D3DDDI_OPEN_PATCH* PD3DDDI_OPEN_PATCH;
D3DDDI_OPEN_PATCH D3dDdiOpenPatch;

//WDDMDDI_CREATE_PATCH (Undocumented) - Patches all callbacks to Windows Display Driver Model in one go for D3dDdiCreateDevice()
typedef VOID WINAPI WDDMDDI_CREATE_PATCH(D3D10DDIARG_CREATEDEVICE& Info);
typedef WDDMDDI_CREATE_PATCH* PWDDMDDI_CREATE_PATCH;
WDDMDDI_CREATE_PATCH WddmDdiCreatePatch;

//--------------------------------------------------------------------------------------------------------
#pragma region //Adapter Function Declarations (D3D10_2DDI_ADAPTERFUNCS) [D3D10_2]

typedef SIZE_T APIENTRY D3DDDI_CALCPRIVATEDEVICESIZE(D3D10DDI_HADAPTER, _In_ CONST D3D10DDIARG_CALCPRIVATEDEVICESIZE*); //PFND3D10DDI_CALCPRIVATEDEVICESIZE
typedef HRESULT APIENTRY D3DDDI_CLOSEADAPTER(D3D10DDI_HADAPTER); //PFND3D10DDI_CLOSEADAPTER
typedef HRESULT APIENTRY D3DDDI_CREATEDEVICE(D3D10DDI_HADAPTER, _In_ D3D10DDIARG_CREATEDEVICE*); //PFND3D10DDI_CREATEDEVICE
typedef HRESULT APIENTRY D3DDDI_GETCAPS(D3D10DDI_HADAPTER, _In_ CONST D3D10_2DDIARG_GETCAPS*); //PFND3D10_2DDI_GETCAPS
typedef HRESULT APIENTRY D3DDDI_GETSUPPORTEDVERSIONS(D3D10DDI_HADAPTER, _Inout_ UINT32* puEntries, _Out_writes_opt_(*puEntries) UINT64* pSupportedDDIInterfaceVersions); //PFND3D10_2DDI_GETSUPPORTEDVERSIONS

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Adapter Functions (D3D10_2DDI_ADAPTERFUNCS) [D3D10_2]

D3DDDI_CALCPRIVATEDEVICESIZE   D3dDdiCalcPrivateDeviceSize;
D3DDDI_CLOSEADAPTER            D3dDdiCloseAdapter;
D3DDDI_CREATEDEVICE            D3dDdiCreateDevice;
D3DDDI_GETCAPS                 D3dDdiGetCaps;
D3DDDI_GETSUPPORTEDVERSIONS    D3dDdiGetSupportedVersions;

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Adapter Callback Declarations (D3DDDI_ADAPTERCALLBACKS) [D3D10_2]

typedef _Check_return_ HRESULT APIENTRY CALLBACK D3DDDI_QUERYADAPTERINFO_CB(_In_ HANDLE hAdapter, _Inout_ CONST D3DDDICB_QUERYADAPTERINFO*); //PFND3DDDI_QUERYADAPTERINFOCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK D3DDDI_GETMULTISAMPLEMETHODLIST_CB(_In_ HANDLE hAdapter, _Inout_ D3DDDICB_GETMULTISAMPLEMETHODLIST*); //PFND3DDDI_GETMULTISAMPLEMETHODLISTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK D3DDDI_QUERYADAPTERINFO2_CB(_In_ HANDLE hAdapter, _Inout_ CONST D3DDDICB_QUERYADAPTERINFO2*); //PFND3DDDI_QUERYADAPTERINFOCB2

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Adapter Callbacks (D3DDDI_ADAPTERCALLBACKS) [D3D10_2]

D3DDDI_QUERYADAPTERINFO_CB           D3dDdiQueryAdapterInfoCb;
D3DDDI_GETMULTISAMPLEMETHODLIST_CB   D3dDdiGetMultisampleMethodListCb;
D3DDDI_QUERYADAPTERINFO2_CB          D3dDdiQueryAdapterInfo2Cb;

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device Kernel Callback Declarations (D3DDDI_DEVICECALLBACKS) [WDDM]

typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_ALLOCATECB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_ALLOCATE*); //PFND3DDDI_ALLOCATECB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_DEALLOCATECB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_DEALLOCATE*); //PFND3DDDI_DEALLOCATECB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SETPRIORITYCB(_In_ HANDLE hDevice, _In_ D3DDDICB_SETPRIORITY*); //PFND3DDDI_SETPRIORITYCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_QUERYRESIDENCYCB(_In_ HANDLE hDevice, _Inout_ CONST D3DDDICB_QUERYRESIDENCY*); //PFND3DDDI_QUERYRESIDENCYCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SETDISPLAYMODECB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_SETDISPLAYMODE*); //PFND3DDDI_SETDISPLAYMODECB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_PRESENTCB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_PRESENT*); //PFND3DDDI_PRESENTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_RENDERCB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_RENDER*); //PFND3DDDI_RENDERCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_LOCKCB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_LOCK*); //PFND3DDDI_LOCKCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_UNLOCKCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_UNLOCK*); //PFND3DDDI_UNLOCKCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_ESCAPECB(_In_ HANDLE hAdapter, _Inout_ CONST D3DDDICB_ESCAPE*); //PFND3DDDI_ESCAPECB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_CREATEOVERLAYCB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_CREATEOVERLAY*); //PFND3DDDI_CREATEOVERLAYCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_UPDATEOVERLAYCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_UPDATEOVERLAY*); //PFND3DDDI_UPDATEOVERLAYCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_FLIPOVERLAYCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_FLIPOVERLAY*); //PFND3DDDI_FLIPOVERLAYCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_DESTROYOVERLAYCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_DESTROYOVERLAY*); //PFND3DDDI_DESTROYOVERLAYCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_CREATECONTEXTCB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_CREATECONTEXT*); //PFND3DDDI_CREATECONTEXTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_DESTROYCONTEXTCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_DESTROYCONTEXT*); //PFND3DDDI_DESTROYCONTEXTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_CREATESYNCHRONIZATIONOBJECTCB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_CREATESYNCHRONIZATIONOBJECT*); //PFND3DDDI_CREATESYNCHRONIZATIONOBJECTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_DESTROYSYNCHRONIZATIONOBJECTCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_DESTROYSYNCHRONIZATIONOBJECT*); //PFND3DDDI_DESTROYSYNCHRONIZATIONOBJECTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_WAITFORSYNCHRONIZATIONOBJECTCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_WAITFORSYNCHRONIZATIONOBJECT*); //PFND3DDDI_WAITFORSYNCHRONIZATIONOBJECTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SIGNALSYNCHRONIZATIONOBJECTCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_SIGNALSYNCHRONIZATIONOBJECT*); //PFND3DDDI_SIGNALSYNCHRONIZATIONOBJECTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SETASYNCCALLBACKSCB(_In_ HANDLE hDevice, _In_ BOOL Enable); //PFND3DDDI_SETASYNCCALLBACKSCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SETDISPLAYPRIVATEDRIVERFORMATCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_SETDISPLAYPRIVATEDRIVERFORMAT*); //PFND3DDDI_SETDISPLAYPRIVATEDRIVERFORMATCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_OFFERALLOCATIONSCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_OFFERALLOCATIONS*); //PFND3DDDI_OFFERALLOCATIONSCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_RECLAIMALLOCATIONSCB(_In_ HANDLE hDevice, _Inout_ CONST D3DDDICB_RECLAIMALLOCATIONS*); //PFND3DDDI_RECLAIMALLOCATIONSCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_CREATESYNCHRONIZATIONOBJECT2CB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_CREATESYNCHRONIZATIONOBJECT2*); //PFND3DDDI_CREATESYNCHRONIZATIONOBJECT2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_WAITFORSYNCHRONIZATIONOBJECT2CB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_WAITFORSYNCHRONIZATIONOBJECT2*); //PFND3DDDI_WAITFORSYNCHRONIZATIONOBJECT2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SIGNALSYNCHRONIZATIONOBJECT2CB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_SIGNALSYNCHRONIZATIONOBJECT2*); //PFND3DDDI_SIGNALSYNCHRONIZATIONOBJECT2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_PRESENTMULTIPLANEOVERLAYCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_PRESENTMULTIPLANEOVERLAY*); //PFND3DDDI_PRESENTMULTIPLANEOVERLAYCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_LOGUMDMARKERCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_LOGUMDMARKER*); //PFND3DDDI_LOGUMDMARKERCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_MAKERESIDENTCB(_In_ HANDLE hDevice, _Inout_ D3DDDI_MAKERESIDENT*); //PFND3DDDI_MAKERESIDENTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_EVICTCB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_EVICT*); //PFND3DDDI_EVICTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_WAITFORSYNCHRONIZATIONOBJECTFROMCPUCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_WAITFORSYNCHRONIZATIONOBJECTFROMCPU*); //PFND3DDDI_WAITFORSYNCHRONIZATIONOBJECTFROMCPUCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SIGNALSYNCHRONIZATIONOBJECTFROMCPUCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_SIGNALSYNCHRONIZATIONOBJECTFROMCPU*); //PFND3DDDI_SIGNALSYNCHRONIZATIONOBJECTFROMCPUCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_WAITFORSYNCHRONIZATIONOBJECTFROMGPUCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_WAITFORSYNCHRONIZATIONOBJECTFROMGPU*); //PFND3DDDI_WAITFORSYNCHRONIZATIONOBJECTFROMGPUCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SIGNALSYNCHRONIZATIONOBJECTFROMGPUCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_SIGNALSYNCHRONIZATIONOBJECTFROMGPU*); //PFND3DDDI_SIGNALSYNCHRONIZATIONOBJECTFROMGPUCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_CREATEPAGINGQUEUECB(_In_ HANDLE hDevice, _Out_ D3DDDICB_CREATEPAGINGQUEUE*); //PFND3DDDI_CREATEPAGINGQUEUECB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_DESTROYPAGINGQUEUECB(_In_ HANDLE hDevice, _In_ const D3DDDI_DESTROYPAGINGQUEUE*); //PFND3DDDI_DESTROYPAGINGQUEUECB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_LOCK2CB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_LOCK2*); //PFND3DDDI_LOCK2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_UNLOCK2CB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_UNLOCK2*); //PFND3DDDI_UNLOCK2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_INVALIDATECACHECB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_INVALIDATECACHE*); //PFND3DDDI_INVALIDATECACHECB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_RESERVEGPUVIRTUALADDRESSCB(_In_ HANDLE hDevice, _Inout_ D3DDDI_RESERVEGPUVIRTUALADDRESS*); //PFND3DDDI_RESERVEGPUVIRTUALADDRESSCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_MAPGPUVIRTUALADDRESSCB(_In_ HANDLE hDevice, _Inout_ D3DDDI_MAPGPUVIRTUALADDRESS*); //PFND3DDDI_MAPGPUVIRTUALADDRESSCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_FREEGPUVIRTUALADDRESSCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_FREEGPUVIRTUALADDRESS*); //PFND3DDDI_FREEGPUVIRTUALADDRESSCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_UPDATEGPUVIRTUALADDRESSCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_UPDATEGPUVIRTUALADDRESS*); //PFND3DDDI_UPDATEGPUVIRTUALADDRESSCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_CREATECONTEXTVIRTUALCB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_CREATECONTEXTVIRTUAL*); //PFND3DDDI_CREATECONTEXTVIRTUALCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SUBMITCOMMANDCB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_SUBMITCOMMAND*); //PFND3DDDI_SUBMITCOMMANDCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_DEALLOCATE2CB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_DEALLOCATE2*); //PFND3DDDI_DEALLOCATE2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SIGNALSYNCHRONIZATIONOBJECTFROMGPU2CB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_SIGNALSYNCHRONIZATIONOBJECTFROMGPU2*); //PFND3DDDI_SIGNALSYNCHRONIZATIONOBJECTFROMGPU2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_RECLAIMALLOCATIONS2CB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_RECLAIMALLOCATIONS2*); //PFND3DDDI_RECLAIMALLOCATIONS2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_GETRESOURCEPRESENTPRIVATEDRIVERDATACB(_In_ HANDLE hDevice, _Inout_ D3DDDI_GETRESOURCEPRESENTPRIVATEDRIVERDATA*); //PFND3DDDI_GETRESOURCEPRESENTPRIVATEDRIVERDATACB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_OFFERALLOCATIONS2CB(_In_ HANDLE hDevice, _In_ CONST D3DDDICB_OFFERALLOCATIONS2*); //PFND3DDDI_OFFERALLOCATIONS2CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_RECLAIMALLOCATIONS3CB(_In_ HANDLE hDevice, _Inout_ D3DDDICB_RECLAIMALLOCATIONS3*); //PFND3DDDI_RECLAIMALLOCATIONS3CB

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device Kernel Callbacks (D3DDDI_DEVICECALLBACKS) [WDDM]

WDDMDDI_ALLOCATECB                              WddmDdiAllocateCb;
WDDMDDI_DEALLOCATECB                            WddmDdiDeallocateCb;
WDDMDDI_SETPRIORITYCB                           WddmDdiSetPriorityCb;
WDDMDDI_QUERYRESIDENCYCB                        WddmDdiQueryResidencyCb;
WDDMDDI_SETDISPLAYMODECB                        WddmDdiSetDisplayModeCb;
WDDMDDI_PRESENTCB                               WddmDdiPresentCb;
WDDMDDI_RENDERCB                                WddmDdiRenderCb;
WDDMDDI_LOCKCB                                  WddmDdiLockCb;
WDDMDDI_UNLOCKCB                                WddmDdiUnlockCb;
WDDMDDI_ESCAPECB                                WddmDdiEscapeCb;
WDDMDDI_CREATEOVERLAYCB                         WddmDdiCreateOverlayCb;
WDDMDDI_UPDATEOVERLAYCB                         WddmDdiUpdateOverlayCb;
WDDMDDI_FLIPOVERLAYCB                           WddmDdiFlipOverlayCb;
WDDMDDI_DESTROYOVERLAYCB                        WddmDdiDestroyOverlayCb;
WDDMDDI_CREATECONTEXTCB                         WddmDdiCreateContextCb;
WDDMDDI_DESTROYCONTEXTCB                        WddmDdiDestroyContextCb;
WDDMDDI_CREATESYNCHRONIZATIONOBJECTCB           WddmDdiCreateSynchronizationObjectCb;
WDDMDDI_DESTROYSYNCHRONIZATIONOBJECTCB          WddmDdiDestroySynchronizationObjectCb;
WDDMDDI_WAITFORSYNCHRONIZATIONOBJECTCB          WddmDdiWaitForSynchronizationObjectCb;
WDDMDDI_SIGNALSYNCHRONIZATIONOBJECTCB           WddmDdiSignalSynchronizationObjectCb;
WDDMDDI_SETASYNCCALLBACKSCB                     WddmDdiSetAsyncCallbacksCb;
WDDMDDI_SETDISPLAYPRIVATEDRIVERFORMATCB         WddmDdiSetDisplayPrivateDriverFormatCb;
WDDMDDI_OFFERALLOCATIONSCB                      WddmDdiOfferAllocationsCb;
WDDMDDI_RECLAIMALLOCATIONSCB                    WddmDdiReclaimAllocationsCb;
WDDMDDI_CREATESYNCHRONIZATIONOBJECT2CB          WddmDdiCreateSynchronizationObject2Cb;
WDDMDDI_WAITFORSYNCHRONIZATIONOBJECT2CB         WddmDdiWaitForSynchronizationObject2Cb;
WDDMDDI_SIGNALSYNCHRONIZATIONOBJECT2CB          WddmDdiSignalSynchronizationObject2Cb;
WDDMDDI_PRESENTMULTIPLANEOVERLAYCB              WddmDdiPresentMultiPlaneOverlayCb;
WDDMDDI_LOGUMDMARKERCB                          WddmDdiLogUMDMarkerCb;
WDDMDDI_MAKERESIDENTCB                          WddmDdiMakeResidentCb;
WDDMDDI_EVICTCB                                 WddmDdiEvictCb;
WDDMDDI_WAITFORSYNCHRONIZATIONOBJECTFROMCPUCB   WddmDdiWaitForSynchronizationObjectFromCpuCb;
WDDMDDI_SIGNALSYNCHRONIZATIONOBJECTFROMCPUCB    WddmDdiSignalSynchronizationObjectFromCpuCb;
WDDMDDI_WAITFORSYNCHRONIZATIONOBJECTFROMGPUCB   WddmDdiWaitForSynchronizationObjectFromGpuCb;
WDDMDDI_SIGNALSYNCHRONIZATIONOBJECTFROMGPUCB    WddmDdiSignalSynchronizationObjectFromGpuCb;
WDDMDDI_CREATEPAGINGQUEUECB                     WddmDdiCreatePagingQueueCb;
WDDMDDI_DESTROYPAGINGQUEUECB                    WddmDdiDestroyPagingQueueCb;
WDDMDDI_LOCK2CB                                 WddmDdiLock2Cb;
WDDMDDI_UNLOCK2CB                               WddmDdiUnlock2Cb;
WDDMDDI_INVALIDATECACHECB                       WddmDdiInvalidateCacheCb;
WDDMDDI_RESERVEGPUVIRTUALADDRESSCB              WddmDdiReserveGpuVirtualAddressCb;
WDDMDDI_MAPGPUVIRTUALADDRESSCB                  WddmDdiMapGpuVirtualAddressCb;
WDDMDDI_FREEGPUVIRTUALADDRESSCB                 WddmDdiFreeGpuVirtualAddressCb;
WDDMDDI_UPDATEGPUVIRTUALADDRESSCB               WddmDdiUpdateGpuVirtualAddressCb;
WDDMDDI_CREATECONTEXTVIRTUALCB                  WddmDdiCreateContextVirtualCb;
WDDMDDI_SUBMITCOMMANDCB                         WddmDdiSubmitCommandCb;
WDDMDDI_DEALLOCATE2CB                           WddmDdiDeallocate2Cb;
WDDMDDI_SIGNALSYNCHRONIZATIONOBJECTFROMGPU2CB   WddmDdiSignalSynchronizationObjectFromGpu2Cb;
WDDMDDI_RECLAIMALLOCATIONS2CB                   WddmDdiReclaimAllocations2Cb;
WDDMDDI_GETRESOURCEPRESENTPRIVATEDRIVERDATACB   WddmDdiGetResourcePresentPrivateDriverDataCb;
WDDMDDI_OFFERALLOCATIONS2CB                     WddmDdiOfferAllocations2Cb;
WDDMDDI_RECLAIMALLOCATIONS3CB                   WddmDdiReclaimAllocations3Cb;

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device Function Declarations (D3DWDDM2_6DDI_DEVICEFUNCS) [WDDM2_6]

typedef VOID APIENTRY WDDMDDI_RESOURCEUPDATESUBRESOURCEUP(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT, _In_opt_ CONST D3D10_DDI_BOX*, _In_ CONST VOID*, UINT, UINT, UINT CopyFlags); //PFND3D11_1DDI_RESOURCEUPDATESUBRESOURCEUP
typedef VOID APIENTRY WDDMDDI_SETCONSTANTBUFFERS(D3D10DDI_HDEVICE, _In_range_(0, D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1) UINT StartSlot, _In_range_(0, D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot) UINT NumBuffers, _In_reads_(NumBuffers) CONST D3D10DDI_HRESOURCE*, _In_reads_opt_(NumBuffers) CONST UINT* pFirstConstant, _In_reads_opt_(NumBuffers) CONST UINT* pNumConstants); //PFND3D11_1DDI_SETCONSTANTBUFFERS
typedef VOID APIENTRY WDDMDDI_SETSHADERRESOURCES(D3D10DDI_HDEVICE, _In_range_(0, D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1) UINT StartSlot, _In_range_(0, D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot) UINT NumViews, _In_reads_(NumViews) CONST D3D10DDI_HSHADERRESOURCEVIEW*); //PFND3D10DDI_SETSHADERRESOURCES
typedef VOID APIENTRY WDDMDDI_SETSHADER(D3D10DDI_HDEVICE, D3D10DDI_HSHADER); //PFND3D10DDI_SETSHADER
typedef VOID APIENTRY WDDMDDI_SETSAMPLERS(D3D10DDI_HDEVICE, _In_range_(0, D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1) UINT StartSlot, _In_range_(0, D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot) UINT NumSamplers, _In_reads_(NumSamplers) CONST D3D10DDI_HSAMPLER*); //PFND3D10DDI_SETSAMPLERS
//PFND3D10DDI_SETSHADER
typedef VOID APIENTRY WDDMDDI_DRAWINDEXED(D3D10DDI_HDEVICE, UINT, UINT, INT); //PFND3D10DDI_DRAWINDEXED
typedef VOID APIENTRY WDDMDDI_DRAW(D3D10DDI_HDEVICE, UINT, UINT); //PFND3D10DDI_DRAW
typedef VOID APIENTRY WDDMDDI_RESOURCEMAP(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT, D3D10_DDI_MAP, UINT, _Out_ D3D10DDI_MAPPED_SUBRESOURCE*); //PFND3D10DDI_RESOURCEMAP
typedef VOID APIENTRY WDDMDDI_RESOURCEUNMAP(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT); //PFND3D10DDI_RESOURCEUNMAP
//PFND3D10DDI_RESOURCEMAP
//PFND3D10DDI_RESOURCEMAP
//PFND3D10DDI_RESOURCEUNMAP
//PFND3D11_1DDI_SETCONSTANTBUFFERS
typedef VOID APIENTRY WDDMDDI_SETINPUTLAYOUT(D3D10DDI_HDEVICE, D3D10DDI_HELEMENTLAYOUT); //PFND3D10DDI_SETINPUTLAYOUT
typedef VOID APIENTRY WDDMDDI_SETVERTEXBUFFERS(D3D10DDI_HDEVICE, _In_range_(0, D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1) UINT StartSlot, _In_range_(0, D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot) UINT NumBuffers, _In_reads_(NumBuffers) CONST D3D10DDI_HRESOURCE*, _In_reads_(NumBuffers) CONST UINT*, _In_reads_(NumBuffers) CONST UINT*); //PFND3D10DDI_IA_SETVERTEXBUFFERS
typedef VOID APIENTRY WDDMDDI_SETINDEXBUFFER(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, DXGI_FORMAT, UINT); //PFND3D10DDI_IA_SETINDEXBUFFER
typedef VOID APIENTRY WDDMDDI_DRAWINDEXEDINSTANCED(D3D10DDI_HDEVICE, UINT, UINT, UINT, INT, UINT); //PFND3D10DDI_DRAWINDEXEDINSTANCED
typedef VOID APIENTRY WDDMDDI_DRAWINSTANCED(D3D10DDI_HDEVICE, UINT, UINT, UINT, UINT); //PFND3D10DDI_DRAWINSTANCED
//PFND3D10DDI_RESOURCEMAP
//PFND3D10DDI_RESOURCEUNMAP
//PFND3D11_1DDI_SETCONSTANTBUFFERS
//PFND3D10DDI_SETSHADER
typedef VOID APIENTRY WDDMDDI_SETTOPOLOGY(D3D10DDI_HDEVICE, D3D10_DDI_PRIMITIVE_TOPOLOGY); //PFND3D10DDI_IA_SETTOPOLOGY
typedef VOID APIENTRY WDDMDDI_RESOURCEMAP(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT, D3D10_DDI_MAP, UINT, _Out_ D3D10DDI_MAPPED_SUBRESOURCE*); //PFND3D10DDI_RESOURCEMAP
//PFND3D10DDI_RESOURCEUNMAP
typedef VOID APIENTRY WDDMDDI_SETSHADERRESOURCES(D3D10DDI_HDEVICE, _In_range_(0, D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1) UINT StartSlot, _In_range_(0, D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot) UINT NumViews, _In_reads_(NumViews) CONST D3D10DDI_HSHADERRESOURCEVIEW*); //PFND3D10DDI_SETSHADERRESOURCES
//PFND3D10DDI_SETSAMPLERS
//PFND3D10DDI_SETSHADERRESOURCES
//PFND3D10DDI_SETSAMPLERS
typedef VOID APIENTRY WDDMDDI_SETRENDERTARGETS(D3D10DDI_HDEVICE, _In_reads_(NumRTVs) CONST D3D10DDI_HRENDERTARGETVIEW*, _In_range_(0, D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT) UINT NumRTVs, _In_range_(0, D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT) UINT ClearSlots, D3D10DDI_HDEPTHSTENCILVIEW, _In_reads_(NumUAVs) CONST D3D11DDI_HUNORDEREDACCESSVIEW*, _In_reads_(NumUAVs) CONST UINT*, _In_range_(0, D3D11_1_UAV_SLOT_COUNT - 1) UINT UAVStartSlot, _In_range_(0, D3D11_1_UAV_SLOT_COUNT - UAVStartSlot) UINT NumUAVs, _In_range_(0, D3D11_1_UAV_SLOT_COUNT - 1) UINT UAVRangeStart, _In_range_(0, D3D11_1_UAV_SLOT_COUNT - UAVRangeStart) UINT UAVRangeSize); //PFND3D11DDI_SETRENDERTARGETS
typedef VOID APIENTRY WDDMDDI_SHADERRESOURCEVIEWREADAFTERWRITEHAZARD(D3D10DDI_HDEVICE, D3D10DDI_HSHADERRESOURCEVIEW, D3D10DDI_HRESOURCE); //PFND3D10DDI_SHADERRESOURCEVIEWREADAFTERWRITEHAZARD
typedef VOID APIENTRY WDDMDDI_RESOURCEREADAFTERWRITEHAZARD(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE); //PFND3D10DDI_RESOURCEREADAFTERWRITEHAZARD
typedef VOID APIENTRY WDDMDDI_SETBLENDSTATE(D3D10DDI_HDEVICE, D3D10DDI_HBLENDSTATE, CONST FLOAT[4], UINT); //PFND3D10DDI_SETBLENDSTATE
typedef VOID APIENTRY WDDMDDI_SETDEPTHSTENCILSTATE(D3D10DDI_HDEVICE, D3D10DDI_HDEPTHSTENCILSTATE, UINT); //PFND3D10DDI_SETDEPTHSTENCILSTATE
typedef VOID APIENTRY WDDMDDI_SETRASTERIZERSTATE(D3D10DDI_HDEVICE, D3D10DDI_HRASTERIZERSTATE); //PFND3D10DDI_SETRASTERIZERSTATE
typedef VOID APIENTRY WDDMDDI_QUERYEND(D3D10DDI_HDEVICE, D3D10DDI_HQUERY); //PFND3D10DDI_QUERYEND
typedef VOID APIENTRY WDDMDDI_QUERYBEGIN(D3D10DDI_HDEVICE, D3D10DDI_HQUERY); //PFND3D10DDI_QUERYBEGIN
typedef VOID APIENTRY WDDMDDI_RESOURCECOPYREGION(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT, UINT, UINT, UINT, D3D10DDI_HRESOURCE, UINT, _In_opt_ CONST D3D10_DDI_BOX*, UINT CopyFlags); //PFND3D11_1DDI_RESOURCECOPYREGION
//PFND3D11_1DDI_RESOURCEUPDATESUBRESOURCEUP
typedef VOID APIENTRY WDDMDDI_SETTARGETS(D3D10DDI_HDEVICE, _In_range_(0, D3D11_SO_BUFFER_SLOT_COUNT) UINT NumBuffers, _In_range_(0, D3D11_SO_BUFFER_SLOT_COUNT) UINT ClearTargets, _In_reads_(NumBuffers) CONST D3D10DDI_HRESOURCE*, _In_reads_(NumBuffers) CONST UINT*); //PFND3D10DDI_SO_SETTARGETS
typedef VOID APIENTRY WDDMDDI_DRAWAUTO(D3D10DDI_HDEVICE); //PFND3D10DDI_DRAWAUTO
typedef VOID APIENTRY WDDMDDI_SETVIEWPORTS(D3D10DDI_HDEVICE, _In_range_(0, D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) UINT NumViewports, _In_range_(0, D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE - NumViewports) UINT ClearViewports, _In_reads_(NumViewports) CONST D3D10_DDI_VIEWPORT*); //PFND3D10DDI_SETVIEWPORTS
typedef VOID APIENTRY WDDMDDI_SETSCISSORRECTS(D3D10DDI_HDEVICE, _In_range_(0, D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) UINT NumRects, _In_range_(0, D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE - NumRects) UINT ClearRects, _In_reads_(NumRects) CONST D3D10_DDI_RECT*); //PFND3D10DDI_SETSCISSORRECTS
typedef VOID APIENTRY WDDMDDI_CLEARRENDERTARGETVIEW(D3D10DDI_HDEVICE, D3D10DDI_HRENDERTARGETVIEW, FLOAT[4]); //PFND3D10DDI_CLEARRENDERTARGETVIEW
typedef VOID APIENTRY WDDMDDI_CLEARDEPTHSTENCILVIEW(D3D10DDI_HDEVICE, D3D10DDI_HDEPTHSTENCILVIEW, UINT, FLOAT, UINT8); //PFND3D10DDI_CLEARDEPTHSTENCILVIEW
typedef VOID APIENTRY WDDMDDI_SETPREDICATION(D3D10DDI_HDEVICE, D3D10DDI_HQUERY, BOOL); //PFND3D10DDI_SETPREDICATION
typedef VOID APIENTRY WDDMDDI_QUERYGETDATA(D3D10DDI_HDEVICE, D3D10DDI_HQUERY, _Out_writes_bytes_all_opt_(DataSize) VOID*, UINT DataSize, UINT); //PFND3D10DDI_QUERYGETDATA
typedef BOOL APIENTRY WDDMDDI_FLUSH(D3D10DDI_HDEVICE, UINT contextType, UINT FlushFlags); //PFND3DWDDM2_0DDI_FLUSH
typedef VOID APIENTRY WDDMDDI_GENMIPS(D3D10DDI_HDEVICE, D3D10DDI_HSHADERRESOURCEVIEW); //PFND3D10DDI_GENMIPS
typedef VOID APIENTRY WDDMDDI_RESOURCECOPY(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, D3D10DDI_HRESOURCE); //PFND3D10DDI_RESOURCECOPY
typedef VOID APIENTRY WDDMDDI_RESOURCERESOLVESUBRESOURCE(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT, D3D10DDI_HRESOURCE, UINT, DXGI_FORMAT); //PFND3D10DDI_RESOURCERESOLVESUBRESOURCE
//PFND3D10DDI_RESOURCEMAP
//PFND3D10DDI_RESOURCEUNMAP
typedef BOOL APIENTRY WDDMDDI_RESOURCEISSTAGINGBUSY(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE); //PFND3D10DDI_RESOURCEISSTAGINGBUSY
typedef VOID APIENTRY WDDMDDI_RELOCATEDEVICEFUNCS(D3D10DDI_HDEVICE, _In_ struct D3DWDDM2_6DDI_DEVICEFUNCS*); //PFND3DWDDM2_6DDI_RELOCATEDEVICEFUNCS
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATERESOURCESIZE(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATERESOURCE*); //PFND3D11DDI_CALCPRIVATERESOURCESIZE
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEOPENEDRESOURCESIZE(D3D10DDI_HDEVICE, _In_ CONST D3D10DDIARG_OPENRESOURCE*); //PFND3D10DDI_CALCPRIVATEOPENEDRESOURCESIZE
typedef VOID APIENTRY WDDMDDI_CREATERESOURCE(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATERESOURCE*, D3D10DDI_HRESOURCE, D3D10DDI_HRTRESOURCE); //PFND3D11DDI_CREATERESOURCE
typedef VOID APIENTRY WDDMDDI_OPENRESOURCE(D3D10DDI_HDEVICE, _In_ CONST D3D10DDIARG_OPENRESOURCE*, D3D10DDI_HRESOURCE, D3D10DDI_HRTRESOURCE); //PFND3D10DDI_OPENRESOURCE
typedef VOID APIENTRY WDDMDDI_DESTROYRESOURCE(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE); //PFND3D10DDI_DESTROYRESOURCE
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATESHADERRESOURCEVIEWSIZE(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDIARG_CREATESHADERRESOURCEVIEW*); //PFND3DWDDM2_0DDI_CALCPRIVATESHADERRESOURCEVIEWSIZE
typedef VOID APIENTRY WDDMDDI_CREATESHADERRESOURCEVIEW(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDIARG_CREATESHADERRESOURCEVIEW*, D3D10DDI_HSHADERRESOURCEVIEW, D3D10DDI_HRTSHADERRESOURCEVIEW); //PFND3DWDDM2_0DDI_CREATESHADERRESOURCEVIEW
typedef VOID APIENTRY WDDMDDI_DESTROYSHADERRESOURCEVIEW(D3D10DDI_HDEVICE, D3D10DDI_HSHADERRESOURCEVIEW); //PFND3D10DDI_DESTROYSHADERRESOURCEVIEW
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATERENDERTARGETVIEWSIZE(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDIARG_CREATERENDERTARGETVIEW*); //PFND3DWDDM2_0DDI_CALCPRIVATERENDERTARGETVIEWSIZE
typedef VOID APIENTRY WDDMDDI_CREATERENDERTARGETVIEW(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDIARG_CREATERENDERTARGETVIEW*, D3D10DDI_HRENDERTARGETVIEW, D3D10DDI_HRTRENDERTARGETVIEW); //PFND3DWDDM2_0DDI_CREATERENDERTARGETVIEW
typedef VOID APIENTRY WDDMDDI_DESTROYRENDERTARGETVIEW(D3D10DDI_HDEVICE, D3D10DDI_HRENDERTARGETVIEW); //PFND3D10DDI_DESTROYRENDERTARGETVIEW
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEDEPTHSTENCILVIEWSIZE(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATEDEPTHSTENCILVIEW*); //PFND3D11DDI_CALCPRIVATEDEPTHSTENCILVIEWSIZE
typedef VOID APIENTRY WDDMDDI_CREATEDEPTHSTENCILVIEW(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATEDEPTHSTENCILVIEW*, D3D10DDI_HDEPTHSTENCILVIEW, D3D10DDI_HRTDEPTHSTENCILVIEW); //PFND3D11DDI_CREATEDEPTHSTENCILVIEW
typedef VOID APIENTRY WDDMDDI_DESTROYDEPTHSTENCILVIEW(D3D10DDI_HDEVICE, D3D10DDI_HDEPTHSTENCILVIEW); //PFND3D10DDI_DESTROYDEPTHSTENCILVIEW
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEELEMENTLAYOUTSIZE(D3D10DDI_HDEVICE, _In_ CONST D3D10DDIARG_CREATEELEMENTLAYOUT*); //PFND3D10DDI_CALCPRIVATEELEMENTLAYOUTSIZE
typedef VOID APIENTRY WDDMDDI_CREATEELEMENTLAYOUT(D3D10DDI_HDEVICE, _In_ CONST D3D10DDIARG_CREATEELEMENTLAYOUT*, D3D10DDI_HELEMENTLAYOUT, D3D10DDI_HRTELEMENTLAYOUT); //PFND3D10DDI_CREATEELEMENTLAYOUT
typedef VOID APIENTRY WDDMDDI_DESTROYELEMENTLAYOUT(D3D10DDI_HDEVICE, D3D10DDI_HELEMENTLAYOUT); //PFND3D10DDI_DESTROYELEMENTLAYOUT
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEBLENDSTATESIZE(D3D10DDI_HDEVICE, _In_ CONST D3D11_1_DDI_BLEND_DESC*); //PFND3D11_1DDI_CALCPRIVATEBLENDSTATESIZE
typedef VOID APIENTRY WDDMDDI_CREATEBLENDSTATE(D3D10DDI_HDEVICE, _In_ CONST D3D11_1_DDI_BLEND_DESC*, D3D10DDI_HBLENDSTATE, D3D10DDI_HRTBLENDSTATE); //PFND3D11_1DDI_CREATEBLENDSTATE
typedef VOID APIENTRY WDDMDDI_DESTROYBLENDSTATE(D3D10DDI_HDEVICE, D3D10DDI_HBLENDSTATE); //PFND3D10DDI_DESTROYBLENDSTATE
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEDEPTHSTENCILSTATESIZE(D3D10DDI_HDEVICE, _In_ CONST D3D10_DDI_DEPTH_STENCIL_DESC*); //PFND3D10DDI_CALCPRIVATEDEPTHSTENCILSTATESIZE
typedef VOID APIENTRY WDDMDDI_CREATEDEPTHSTENCILSTATE(D3D10DDI_HDEVICE, _In_ CONST D3D10_DDI_DEPTH_STENCIL_DESC*, D3D10DDI_HDEPTHSTENCILSTATE, D3D10DDI_HRTDEPTHSTENCILSTATE); //PFND3D10DDI_CREATEDEPTHSTENCILSTATE
typedef VOID APIENTRY WDDMDDI_DESTROYDEPTHSTENCILSTATE(D3D10DDI_HDEVICE, D3D10DDI_HDEPTHSTENCILSTATE); //PFND3D10DDI_DESTROYDEPTHSTENCILSTATE
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATERASTERIZERSTATESIZE(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDI_RASTERIZER_DESC*); //PFND3DWDDM2_0DDI_CALCPRIVATERASTERIZERSTATESIZE
typedef VOID APIENTRY WDDMDDI_CREATERASTERIZERSTATE(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDI_RASTERIZER_DESC*, D3D10DDI_HRASTERIZERSTATE, D3D10DDI_HRTRASTERIZERSTATE); //PFND3DWDDM2_0DDI_CREATERASTERIZERSTATE
typedef VOID APIENTRY WDDMDDI_DESTROYRASTERIZERSTATE(D3D10DDI_HDEVICE, D3D10DDI_HRASTERIZERSTATE); //PFND3D10DDI_DESTROYRASTERIZERSTATE
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATESHADERSIZE(D3D10DDI_HDEVICE, _In_reads_(pShaderCode[1]) CONST UINT* pShaderCode, _In_ CONST D3D11_1DDIARG_STAGE_IO_SIGNATURES*); //PFND3D11_1DDI_CALCPRIVATESHADERSIZE
typedef VOID APIENTRY WDDMDDI_CREATEVERTEXSHADER(D3D10DDI_HDEVICE, _In_reads_(pShaderCode[1]) CONST UINT* pShaderCode, D3D10DDI_HSHADER, D3D10DDI_HRTSHADER, _In_ CONST D3D11_1DDIARG_STAGE_IO_SIGNATURES*); //PFND3D11_1DDI_CREATEVERTEXSHADER
typedef VOID APIENTRY WDDMDDI_CREATEGEOMETRYSHADER(D3D10DDI_HDEVICE, _In_reads_(pShaderCode[1]) CONST UINT* pShaderCode, D3D10DDI_HSHADER, D3D10DDI_HRTSHADER, _In_ CONST D3D11_1DDIARG_STAGE_IO_SIGNATURES*); //PFND3D11_1DDI_CREATEGEOMETRYSHADER
typedef VOID APIENTRY WDDMDDI_CREATEPIXELSHADER(D3D10DDI_HDEVICE, _In_reads_(pShaderCode[1]) CONST UINT* pShaderCode, D3D10DDI_HSHADER, D3D10DDI_HRTSHADER, _In_ CONST D3D11_1DDIARG_STAGE_IO_SIGNATURES*); //PFND3D11_1DDI_CREATEPIXELSHADER
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEGEOMETRYSHADERWITHSTREAMOUTPUT(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT*, _In_ CONST D3D11_1DDIARG_STAGE_IO_SIGNATURES*); //PFND3D11_1DDI_CALCPRIVATEGEOMETRYSHADERWITHSTREAMOUTPUT
typedef VOID APIENTRY WDDMDDI_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT*, D3D10DDI_HSHADER, D3D10DDI_HRTSHADER, _In_ CONST D3D11_1DDIARG_STAGE_IO_SIGNATURES*); //PFND3D11_1DDI_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT
typedef VOID APIENTRY WDDMDDI_DESTROYSHADER(D3D10DDI_HDEVICE, D3D10DDI_HSHADER); //PFND3D10DDI_DESTROYSHADER
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATESAMPLERSIZE(D3D10DDI_HDEVICE, _In_ CONST D3D10_DDI_SAMPLER_DESC*); //PFND3D10DDI_CALCPRIVATESAMPLERSIZE
typedef VOID APIENTRY WDDMDDI_CREATESAMPLER(D3D10DDI_HDEVICE, _In_ CONST D3D10_DDI_SAMPLER_DESC*, D3D10DDI_HSAMPLER, D3D10DDI_HRTSAMPLER); //PFND3D10DDI_CREATESAMPLER
typedef VOID APIENTRY WDDMDDI_DESTROYSAMPLER(D3D10DDI_HDEVICE, D3D10DDI_HSAMPLER); //PFND3D10DDI_DESTROYSAMPLER
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEQUERYSIZE(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDIARG_CREATEQUERY*); //PFND3DWDDM2_0DDI_CALCPRIVATEQUERYSIZE
typedef VOID APIENTRY WDDMDDI_CREATEQUERY(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDIARG_CREATEQUERY*, D3D10DDI_HQUERY, D3D10DDI_HRTQUERY); //PFND3DWDDM2_0DDI_CREATEQUERY
typedef VOID APIENTRY WDDMDDI_DESTROYQUERY(D3D10DDI_HDEVICE, D3D10DDI_HQUERY); //PFND3D10DDI_DESTROYQUERY
typedef VOID APIENTRY WDDMDDI_CHECKFORMATSUPPORT(D3D10DDI_HDEVICE, DXGI_FORMAT, _Out_ UINT*); //PFND3D10DDI_CHECKFORMATSUPPORT
typedef VOID APIENTRY WDDMDDI_CHECKMULTISAMPLEQUALITYLEVELS(D3D10DDI_HDEVICE hDevice, DXGI_FORMAT Format, UINT SampleCount, UINT Flags, _Out_ UINT* pNumQualityLevels); //PFND3DWDDM1_3DDI_CHECKMULTISAMPLEQUALITYLEVELS
typedef VOID APIENTRY WDDMDDI_CHECKCOUNTERINFO(D3D10DDI_HDEVICE, _Out_ D3D10DDI_COUNTER_INFO*); //PFND3D10DDI_CHECKCOUNTERINFO
typedef VOID APIENTRY WDDMDDI_CHECKCOUNTER(D3D10DDI_HDEVICE, D3D10DDI_QUERY, _Out_ D3D10DDI_COUNTER_TYPE*, _Out_ UINT*, _Out_writes_to_opt_(*pNameLength, *pNameLength) LPSTR, _Inout_opt_ UINT* pNameLength, _Out_writes_to_opt_(*pUnitsLength, *pUnitsLength) LPSTR, _Inout_opt_ UINT* pUnitsLength, _Out_writes_to_opt_(*pDescriptionLength, *pDescriptionLength) LPSTR, _Inout_opt_ UINT* pDescriptionLength); //PFND3D10DDI_CHECKCOUNTER
typedef VOID APIENTRY WDDMDDI_DESTROYDEVICE(D3D10DDI_HDEVICE); //PFND3D10DDI_DESTROYDEVICE
typedef VOID APIENTRY WDDMDDI_SETTEXTFILTERSIZE(D3D10DDI_HDEVICE, UINT, UINT); //PFND3D10DDI_SETTEXTFILTERSIZE
typedef VOID APIENTRY WDDMDDI_RESOURCECOPY(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, D3D10DDI_HRESOURCE); //PFND3D10DDI_RESOURCECOPY
typedef VOID APIENTRY WDDMDDI_RESOURCECOPYREGION(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT, UINT, UINT, UINT, D3D10DDI_HRESOURCE, UINT, _In_opt_ CONST D3D10_DDI_BOX*, UINT CopyFlags); //PFND3D11_1DDI_RESOURCECOPYREGION
typedef VOID APIENTRY WDDMDDI_RESETPRIMITIVEID(D3D10DDI_HDEVICE, BOOL); //PFND3D10DDI_RESETPRIMITIVEID
typedef VOID APIENTRY WDDMDDI_SETVERTEXPIPELINEOUTPUT(D3D10DDI_HDEVICE, _In_ CONST D3D10DDIARG_VERTEXPIPELINEOUTPUT*); //PFND3D10DDI_SETVERTEXPIPELINEOUTPUT
typedef VOID APIENTRY WDDMDDI_DRAWINDEXEDINSTANCEDINDIRECT(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT); //PFND3D11DDI_DRAWINDEXEDINSTANCEDINDIRECT
typedef VOID APIENTRY WDDMDDI_DRAWINSTANCEDINDIRECT(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT); //PFND3D11DDI_DRAWINSTANCEDINDIRECT
typedef VOID APIENTRY WDDMDDI_COMMANDLISTEXECUTE(D3D10DDI_HDEVICE, D3D11DDI_HCOMMANDLIST); //PFND3D11DDI_COMMANDLISTEXECUTE
//PFND3D10DDI_SETSHADERRESOURCES
//PFND3D10DDI_SETSHADER
//PFND3D10DDI_SETSAMPLERS
//PFND3D11_1DDI_SETCONSTANTBUFFERS
//PFND3D10DDI_SETSHADERRESOURCES
//PFND3D10DDI_SETSHADER
//PFND3D10DDI_SETSAMPLERS
//PFND3D11_1DDI_SETCONSTANTBUFFERS
typedef VOID APIENTRY WDDMDDI_CREATEHULLSHADER(D3D10DDI_HDEVICE, _In_reads_(pShaderCode[1]) CONST UINT* pShaderCode, D3D10DDI_HSHADER, D3D10DDI_HRTSHADER, _In_ CONST D3D11_1DDIARG_TESSELLATION_IO_SIGNATURES*); //PFND3D11_1DDI_CREATEHULLSHADER
typedef VOID APIENTRY WDDMDDI_CREATEDOMAINSHADER(D3D10DDI_HDEVICE, _In_reads_(pShaderCode[1]) CONST UINT* pShaderCode, D3D10DDI_HSHADER, D3D10DDI_HRTSHADER, _In_ CONST D3D11_1DDIARG_TESSELLATION_IO_SIGNATURES*); //PFND3D11_1DDI_CREATEDOMAINSHADER
typedef VOID APIENTRY WDDMDDI_CHECKDEFERREDCONTEXTHANDLESIZES(D3D10DDI_HDEVICE, _Inout_ UINT* pHSizes, _Out_writes_to_opt_(*pHSizes, *pHSizes) D3D11DDI_HANDLESIZE*); //PFND3D11DDI_CHECKDEFERREDCONTEXTHANDLESIZES
typedef SIZE_T APIENTRY WDDMDDI_CALCDEFERREDCONTEXTHANDLESIZE(D3D10DDI_HDEVICE, D3D11DDI_HANDLETYPE, _In_ VOID*); //PFND3D11DDI_CALCDEFERREDCONTEXTHANDLESIZE
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEDEFERREDCONTEXTSIZE(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CALCPRIVATEDEFERREDCONTEXTSIZE*); //PFND3D11DDI_CALCPRIVATEDEFERREDCONTEXTSIZE
typedef VOID APIENTRY WDDMDDI_CREATEDEFERREDCONTEXT(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATEDEFERREDCONTEXT*); //PFND3D11DDI_CREATEDEFERREDCONTEXT
typedef VOID APIENTRY WDDMDDI_ABANDONCOMMANDLIST(D3D10DDI_HDEVICE); //PFND3D11DDI_ABANDONCOMMANDLIST
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATECOMMANDLISTSIZE(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATECOMMANDLIST*); //PFND3D11DDI_CALCPRIVATECOMMANDLISTSIZE
typedef VOID APIENTRY WDDMDDI_CREATECOMMANDLIST(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATECOMMANDLIST*, D3D11DDI_HCOMMANDLIST, D3D11DDI_HRTCOMMANDLIST); //PFND3D11DDI_CREATECOMMANDLIST
typedef VOID APIENTRY WDDMDDI_DESTROYCOMMANDLIST(D3D10DDI_HDEVICE, D3D11DDI_HCOMMANDLIST); //PFND3D11DDI_DESTROYCOMMANDLIST
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATETESSELLATIONSHADERSIZE(D3D10DDI_HDEVICE, _In_reads_(pShaderCode[1]) CONST UINT* pShaderCode, _In_ CONST D3D11_1DDIARG_TESSELLATION_IO_SIGNATURES*); //PFND3D11_1DDI_CALCPRIVATETESSELLATIONSHADERSIZE
typedef VOID APIENTRY WDDMDDI_SETSHADER_WITH_IFACES(D3D10DDI_HDEVICE, D3D10DDI_HSHADER, UINT NumClassInstances, _In_reads_(NumClassInstances) CONST UINT*, _In_reads_(NumClassInstances) CONST D3D11DDIARG_POINTERDATA*); //PFND3D11DDI_SETSHADER_WITH_IFACES
//PFND3D11DDI_SETSHADER_WITH_IFACES
//PFND3D11DDI_SETSHADER_WITH_IFACES
//PFND3D11DDI_SETSHADER_WITH_IFACES
//PFND3D11DDI_SETSHADER_WITH_IFACES
//PFND3D11DDI_SETSHADER_WITH_IFACES
typedef VOID APIENTRY WDDMDDI_CREATECOMPUTESHADER(D3D10DDI_HDEVICE, _In_reads_(pShaderCode[1]) CONST UINT* pShaderCode, D3D10DDI_HSHADER, D3D10DDI_HRTSHADER); //PFND3D11DDI_CREATECOMPUTESHADER
//PFND3D10DDI_SETSHADER
//PFND3D10DDI_SETSHADERRESOURCES
//PFND3D10DDI_SETSAMPLERS
//PFND3D11_1DDI_SETCONSTANTBUFFERS
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATEUNORDEREDACCESSVIEWSIZE(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDIARG_CREATEUNORDEREDACCESSVIEW*); //PFND3DWDDM2_0DDI_CALCPRIVATEUNORDEREDACCESSVIEWSIZE
typedef VOID APIENTRY WDDMDDI_CREATEUNORDEREDACCESSVIEW(D3D10DDI_HDEVICE, _In_ CONST D3DWDDM2_0DDIARG_CREATEUNORDEREDACCESSVIEW*, D3D11DDI_HUNORDEREDACCESSVIEW, D3D11DDI_HRTUNORDEREDACCESSVIEW); //PFND3DWDDM2_0DDI_CREATEUNORDEREDACCESSVIEW
typedef VOID APIENTRY WDDMDDI_DESTROYUNORDEREDACCESSVIEW(D3D10DDI_HDEVICE, D3D11DDI_HUNORDEREDACCESSVIEW); //PFND3D11DDI_DESTROYUNORDEREDACCESSVIEW
typedef VOID APIENTRY WDDMDDI_CLEARUNORDEREDACCESSVIEWUINT(D3D10DDI_HDEVICE, D3D11DDI_HUNORDEREDACCESSVIEW, CONST UINT[4]); //PFND3D11DDI_CLEARUNORDEREDACCESSVIEWUINT
typedef VOID APIENTRY WDDMDDI_CLEARUNORDEREDACCESSVIEWFLOAT(D3D10DDI_HDEVICE, D3D11DDI_HUNORDEREDACCESSVIEW, CONST FLOAT[4]); //PFND3D11DDI_CLEARUNORDEREDACCESSVIEWFLOAT
typedef VOID APIENTRY WDDMDDI_SETUNORDEREDACCESSVIEWS(D3D10DDI_HDEVICE, _In_range_(0, D3D11_1_UAV_SLOT_COUNT - 1) UINT StartSlot, _In_range_(0, D3D11_1_UAV_SLOT_COUNT - StartSlot) UINT NumViews, _In_reads_(NumViews) CONST D3D11DDI_HUNORDEREDACCESSVIEW*, _In_reads_(NumViews) CONST UINT*); //PFND3D11DDI_SETUNORDEREDACCESSVIEWS
typedef VOID APIENTRY WDDMDDI_DISPATCH(D3D10DDI_HDEVICE, UINT, UINT, UINT); //PFND3D11DDI_DISPATCH
typedef VOID APIENTRY WDDMDDI_DISPATCHINDIRECT(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT); //PFND3D11DDI_DISPATCHINDIRECT
typedef VOID APIENTRY WDDMDDI_SETRESOURCEMINLOD(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, FLOAT); //PFND3D11DDI_SETRESOURCEMINLOD
typedef VOID APIENTRY WDDMDDI_COPYSTRUCTURECOUNT(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT, D3D11DDI_HUNORDEREDACCESSVIEW); //PFND3D11DDI_COPYSTRUCTURECOUNT
typedef VOID APIENTRY WDDMDDI_RECYCLECOMMANDLIST(D3D10DDI_HDEVICE, D3D11DDI_HCOMMANDLIST); //PFND3D11DDI_RECYCLECOMMANDLIST
typedef HRESULT APIENTRY WDDMDDI_RECYCLECREATECOMMANDLIST(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATECOMMANDLIST*, D3D11DDI_HCOMMANDLIST, D3D11DDI_HRTCOMMANDLIST); //PFND3D11DDI_RECYCLECREATECOMMANDLIST
typedef HRESULT APIENTRY WDDMDDI_RECYCLECREATEDEFERREDCONTEXT(D3D10DDI_HDEVICE, _In_ CONST D3D11DDIARG_CREATEDEFERREDCONTEXT*); //PFND3D11DDI_RECYCLECREATEDEFERREDCONTEXT
typedef VOID APIENTRY WDDMDDI_DESTROYCOMMANDLIST(D3D10DDI_HDEVICE, D3D11DDI_HCOMMANDLIST); //PFND3D11DDI_DESTROYCOMMANDLIST
typedef VOID APIENTRY WDDMDDI_DISCARD(D3D10DDI_HDEVICE, D3D11DDI_HANDLETYPE HandleType, VOID* hResourceOrView, _In_reads_opt_(NumRects) CONST D3D10_DDI_RECT*, UINT NumRects); //PFND3D11_1DDI_DISCARD
typedef VOID APIENTRY WDDMDDI_ASSIGNDEBUGBINARY(D3D10DDI_HDEVICE, D3D10DDI_HSHADER, UINT uBinarySize, _In_reads_bytes_(uBinarySize) CONST VOID* pBinary); //PFND3D11_1DDI_ASSIGNDEBUGBINARY
typedef VOID APIENTRY WDDMDDI_RESOURCEMAP(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT, D3D10_DDI_MAP, UINT, _Out_ D3D10DDI_MAPPED_SUBRESOURCE*); //PFND3D10DDI_RESOURCEMAP
typedef VOID APIENTRY WDDMDDI_CHECKDIRECTFLIPSUPPORT(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, D3D10DDI_HRESOURCE, UINT CheckDirectFlipFlags, _Out_ BOOL* pSupported); //PFND3D11_1DDI_CHECKDIRECTFLIPSUPPORT
typedef VOID APIENTRY WDDMDDI_CLEARVIEW(D3D10DDI_HDEVICE hDevice, D3D11DDI_HANDLETYPE viewType, VOID* hView, CONST FLOAT Color[4], _In_reads_opt_(NumRects) CONST D3D10_DDI_RECT* pRect, UINT NumRects); //PFND3D11_1DDI_CLEARVIEW
typedef VOID APIENTRY WDDMDDI_UPDATETILEMAPPINGS(D3D10DDI_HDEVICE hDevice, D3D10DDI_HRESOURCE hTiledResource, UINT NumTiledResourceRegions, _In_reads_(NumTiledResourceRegions) const D3DWDDM1_3DDI_TILED_RESOURCE_COORDINATE* pTiledResourceRegionStartCoords, _In_reads_opt_(NumTiledResourceRegions) const D3DWDDM1_3DDI_TILE_REGION_SIZE* pTiledResourceRegionSizes, D3D10DDI_HRESOURCE hTilePool, UINT NumRanges, _In_reads_opt_(NumRanges) const UINT* pRangeFlags, _In_reads_opt_(NumRanges) const UINT* pTilePoolStartOffsets, _In_reads_opt_(NumRanges) const UINT* pRangeTileCounts, UINT Flags); //PFND3DWDDM1_3DDI_UPDATETILEMAPPINGS
typedef VOID APIENTRY WDDMDDI_COPYTILEMAPPINGS(D3D10DDI_HDEVICE hDevice, D3D10DDI_HRESOURCE hDestTiledResource, _In_ const D3DWDDM1_3DDI_TILED_RESOURCE_COORDINATE* pDestRegionStartCoord, D3D10DDI_HRESOURCE hSourceTiledResource, _In_ const D3DWDDM1_3DDI_TILED_RESOURCE_COORDINATE* pSourceRegionStartCoord, _In_ const D3DWDDM1_3DDI_TILE_REGION_SIZE* pTileRegionSize, UINT Flags); //PFND3DWDDM1_3DDI_COPYTILEMAPPINGS
typedef VOID APIENTRY WDDMDDI_COPYTILES(D3D10DDI_HDEVICE hDevice, D3D10DDI_HRESOURCE hTiledResource, _In_ const D3DWDDM1_3DDI_TILED_RESOURCE_COORDINATE* pTileRegionStartCoord, _In_ const D3DWDDM1_3DDI_TILE_REGION_SIZE* pTileRegionSize, D3D10DDI_HRESOURCE hBuffer, UINT64 BufferStartOffsetInBytes, UINT Flags); //PFND3DWDDM1_3DDI_COPYTILES
typedef VOID APIENTRY WDDMDDI_UPDATETILES(D3D10DDI_HDEVICE hDevice, D3D10DDI_HRESOURCE hDestTiledResource, _In_ const D3DWDDM1_3DDI_TILED_RESOURCE_COORDINATE* pDestTileRegionStartCoord, _In_ const D3DWDDM1_3DDI_TILE_REGION_SIZE* pDestTileRegionSize, _In_ const VOID* pSourceTileData, UINT Flags); //PFND3DWDDM1_3DDI_UPDATETILES
typedef VOID APIENTRY WDDMDDI_TILEDRESOURCEBARRIER(D3D10DDI_HDEVICE hDevice, D3D11DDI_HANDLETYPE TiledResourceAccessBeforeBarrierHandleType, _In_opt_ VOID* hTiledResourceAccessBeforeBarrier, D3D11DDI_HANDLETYPE TiledResourceAccessAfterBarrierHandleType, _In_opt_ VOID* hTiledResourceAccessAfterBarrier); //PFND3DWDDM1_3DDI_TILEDRESOURCEBARRIER
typedef VOID APIENTRY WDDMDDI_GETMIPPACKING(D3D10DDI_HDEVICE hDevice, D3D10DDI_HRESOURCE hTiledResource, _Out_ UINT* pNumPackedMips, _Out_ UINT* pNumTilesForPackedMips); //PFND3DWDDM1_3DDI_GETMIPPACKING
typedef VOID APIENTRY WDDMDDI_RESIZETILEPOOL(D3D10DDI_HDEVICE hDevice, D3D10DDI_HRESOURCE hTilePool, UINT64 NewSizeInBytes); //PFND3DWDDM1_3DDI_RESIZETILEPOOL
typedef VOID APIENTRY WDDMDDI_SETMARKER(D3D10DDI_HDEVICE hDevice); //PFND3DWDDM1_3DDI_SETMARKER
typedef VOID APIENTRY WDDMDDI_SETMARKERMODE(D3D10DDI_HDEVICE hDevice, D3DWDDM1_3DDI_MARKER_TYPE Type, UINT Flags); //FND3DWDDM1_3DDI_SETMARKERMODE
typedef VOID APIENTRY WDDMDDI_SETHARDWAREPROTECTION(D3D10DDI_HDEVICE hDevice, D3D10DDI_HRESOURCE hResource, BOOL Protected); //PFND3DWDDM2_0DDI_SETHARDWAREPROTECTION
typedef VOID APIENTRY WDDMDDI_GETRESOURCELAYOUT(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT SubResourceCount, _Out_ D3DKMT_HANDLE*, _Out_ D3DWDDM2_0DDI_TEXTURE_LAYOUT*, _Out_ UINT* pMipLevelSwizzleTransition, _Out_writes_opt_(SubResourceCount) D3DWDDM2_0DDI_SUBRESOURCE_LAYOUT*); //PFND3DWDDM2_0DDI_GETRESOURCELAYOUT
typedef HRESULT APIENTRY WDDMDDI_RETRIEVE_SHADER_COMMENT(D3D10DDI_HDEVICE, D3D10DDI_HSHADER, _Out_writes_z_(*CharacterCountIncludingNullTerminator) WCHAR* pBuffer, _Inout_ SIZE_T* CharacterCountIncludingNullTerminator); //PFND3DWDDM2_0DDI_RETRIEVE_SHADER_COMMENT
typedef void APIENTRY WDDMDDI_SETHARDWAREPROTECTIONSTATE(D3D10DDI_HDEVICE, BOOL HwProtectionEnable); //PFND3DWDDM2_0DDI_SETHARDWAREPROTECTIONSTATE
typedef VOID APIENTRY WDDMDDI_SYNC_TOKEN(D3D10DDI_HDEVICE, _In_opt_ D3D10DDI_HRESOURCE hResource, HANDLE hSyncToken); //PFND3DWDDM2_1DDI_SYNC_TOKEN
//PFND3DWDDM2_1DDI_SYNC_TOKEN
typedef SIZE_T APIENTRY WDDMDDI_CALCPRIVATE_SHADERCACHE_SESSION_SIZE(D3D10DDI_HDEVICE); //PFND3DWDDM2_2DDI_CALCPRIVATE_SHADERCACHE_SESSION_SIZE
typedef VOID APIENTRY WDDMDDI_CREATE_SHADERCACHE_SESSION(D3D10DDI_HDEVICE, D3DWDDM2_2DDI_HCACHESESSION, D3DWDDM2_2DDI_HRTCACHESESSION); //PFND3DWDDM2_2DDI_CREATE_SHADERCACHE_SESSION
typedef VOID APIENTRY WDDMDDI_DESTROY_SHADERCACHE_SESSION(D3D10DDI_HDEVICE, D3DWDDM2_2DDI_HCACHESESSION); //PFND3DWDDM2_2DDI_DESTROY_SHADERCACHE_SESSION
typedef VOID APIENTRY WDDMDDI_SET_SHADERCACHE_SESSION(D3D10DDI_HDEVICE, D3DWDDM2_2DDI_HCACHESESSION); //PFND3DWDDM2_2DDI_SET_SHADERCACHE_SESSION
typedef void APIENTRY WDDMDDI_QUERY_SCANOUT_CAPS(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT SubResource, D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, UINT PlaneIdx, _Out_ D3DWDDM2_6DDI_SCANOUT_FLAGS* pFlags); //PFND3DWDDM2_6DDI_QUERY_SCANOUT_CAPS
typedef void APIENTRY WDDMDDI_PREPARE_SCANOUT_TRANSFORMATION(D3D10DDI_HDEVICE, D3D10DDI_HRESOURCE, UINT SubResource, D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, UINT PlaneIdx, _In_opt_ D3D10_DDI_RECT* pSubRect); //PFND3DWDDM2_6DDI_PREPARE_SCANOUT_TRANSFORMATION

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device Functions (D3DWDDM2_6DDI_DEVICEFUNCS) [WDDM2_6]

WDDMDDI_RESOURCEUPDATESUBRESOURCEUP                 WddmDdiDefaultConstantBufferUpdateSubResourceUP;
WDDMDDI_SETCONSTANTBUFFERS                          WddmDdiVsSetConstantBuffers;
WDDMDDI_SETSHADERRESOURCES                          WddmDdiPsSetShaderResources;
WDDMDDI_SETSHADER                                   WddmDdiPsSetShader;
WDDMDDI_SETSAMPLERS                                 WddmDdiPsSetSamplers;
WDDMDDI_SETSHADER                                   WddmDdiVsSetShader;
WDDMDDI_DRAWINDEXED                                 WddmDdiDrawIndexed;
WDDMDDI_DRAW                                        WddmDdiDraw;
WDDMDDI_RESOURCEMAP                                 WddmDdiDynamicIABufferMapNoOverwrite;
WDDMDDI_RESOURCEUNMAP                               WddmDdiDynamicIABufferUnmap;
WDDMDDI_RESOURCEMAP                                 WddmDdiDynamicConstantBufferMapDiscard;
WDDMDDI_RESOURCEMAP                                 WddmDdiDynamicIABufferMapDiscard;
WDDMDDI_RESOURCEUNMAP                               WddmDdiDynamicConstantBufferUnmap;
WDDMDDI_SETCONSTANTBUFFERS                          WddmDdiPsSetConstantBuffers;
WDDMDDI_SETINPUTLAYOUT                              WddmDdiIaSetInputLayout;
WDDMDDI_SETVERTEXBUFFERS                            WddmDdiIaSetVertexBuffers;
WDDMDDI_SETINDEXBUFFER                              WddmDdiIaSetIndexBuffer;
WDDMDDI_DRAWINDEXEDINSTANCED                        WddmDdiDrawIndexedInstanced;
WDDMDDI_DRAWINSTANCED                               WddmDdiDrawInstanced;
WDDMDDI_RESOURCEMAP                                 WddmDdiDynamicResourceMapDiscard;
WDDMDDI_RESOURCEUNMAP                               WddmDdiDynamicResourceUnmap;
WDDMDDI_SETCONSTANTBUFFERS                          WddmDdiGsSetConstantBuffers;
WDDMDDI_SETSHADER                                   WddmDdiGsSetShader;
WDDMDDI_SETTOPOLOGY                                 WddmDdiIaSetTopology;
WDDMDDI_RESOURCEMAP                                 WddmDdiStagingResourceMap;
WDDMDDI_RESOURCEUNMAP                               WddmDdiStagingResourceUnmap;
WDDMDDI_SETSHADERRESOURCES                          WddmDdiVsSetShaderResources;
WDDMDDI_SETSAMPLERS                                 WddmDdiVsSetSamplers;
WDDMDDI_SETSHADERRESOURCES                          WddmDdiGsSetShaderResources;
WDDMDDI_SETSAMPLERS                                 WddmDdiGsSetSamplers;
WDDMDDI_SETRENDERTARGETS                            WddmDdiSetRenderTargets;
WDDMDDI_SHADERRESOURCEVIEWREADAFTERWRITEHAZARD      WddmDdiShaderResourceViewReadAfterWriteHazard;
WDDMDDI_RESOURCEREADAFTERWRITEHAZARD                WddmDdiResourceReadAfterWriteHazard;
WDDMDDI_SETBLENDSTATE                               WddmDdiSetBlendState;
WDDMDDI_SETDEPTHSTENCILSTATE                        WddmDdiSetDepthStencilState;
WDDMDDI_SETRASTERIZERSTATE                          WddmDdiSetRasterizerState;
WDDMDDI_QUERYEND                                    WddmDdiQueryEnd;
WDDMDDI_QUERYBEGIN                                  WddmDdiQueryBegin;
WDDMDDI_RESOURCECOPYREGION                          WddmDdiResourceCopyRegion;
WDDMDDI_RESOURCEUPDATESUBRESOURCEUP                 WddmDdiResourceUpdateSubResourceUP;
WDDMDDI_SETTARGETS                                  WddmDdiSoSetTargets;
WDDMDDI_DRAWAUTO                                    WddmDdiDrawAuto;
WDDMDDI_SETVIEWPORTS                                WddmDdiSetViewports;
WDDMDDI_SETSCISSORRECTS                             WddmDdiSetScissorRects;
WDDMDDI_CLEARRENDERTARGETVIEW                       WddmDdiClearRenderTargetView;
WDDMDDI_CLEARDEPTHSTENCILVIEW                       WddmDdiClearDepthStencilView;
WDDMDDI_SETPREDICATION                              WddmDdiSetPredication;
WDDMDDI_QUERYGETDATA                                WddmDdiQueryGetData;
WDDMDDI_FLUSH                                       WddmDdiFlush;
WDDMDDI_GENMIPS                                     WddmDdiGenMips;
WDDMDDI_RESOURCECOPY                                WddmDdiResourceCopy;
WDDMDDI_RESOURCERESOLVESUBRESOURCE                  WddmDdiResourceResolveSubResource;
WDDMDDI_RESOURCEMAP                                 WddmDdiResourceMap;
WDDMDDI_RESOURCEUNMAP                               WddmDdiResourceUnmap;
WDDMDDI_RESOURCEISSTAGINGBUSY                       WddmDdiResourceIsStagingBusy;
WDDMDDI_RELOCATEDEVICEFUNCS                         WddmDdiRelocateDeviceFuncs;
WDDMDDI_CALCPRIVATERESOURCESIZE                     WddmDdiCalcPrivateResourceSize;
WDDMDDI_CALCPRIVATEOPENEDRESOURCESIZE               WddmDdiCalcPrivateOpenedResourceSize;
WDDMDDI_CREATERESOURCE                              WddmDdiCreateResource;
WDDMDDI_OPENRESOURCE                                WddmDdiOpenResource;
WDDMDDI_DESTROYRESOURCE                             WddmDdiDestroyResource;
WDDMDDI_CALCPRIVATESHADERRESOURCEVIEWSIZE           WddmDdiCalcPrivateShaderResourceViewSize;
WDDMDDI_CREATESHADERRESOURCEVIEW                    WddmDdiCreateShaderResourceView;
WDDMDDI_DESTROYSHADERRESOURCEVIEW                   WddmDdiDestroyShaderResourceView;
WDDMDDI_CALCPRIVATERENDERTARGETVIEWSIZE             WddmDdiCalcPrivateRenderTargetViewSize;
WDDMDDI_CREATERENDERTARGETVIEW                      WddmDdiCreateRenderTargetView;
WDDMDDI_DESTROYRENDERTARGETVIEW                     WddmDdiDestroyRenderTargetView;
WDDMDDI_CALCPRIVATEDEPTHSTENCILVIEWSIZE             WddmDdiCalcPrivateDepthStencilViewSize;
WDDMDDI_CREATEDEPTHSTENCILVIEW                      WddmDdiCreateDepthStencilView;
WDDMDDI_DESTROYDEPTHSTENCILVIEW                     WddmDdiDestroyDepthStencilView;
WDDMDDI_CALCPRIVATEELEMENTLAYOUTSIZE                WddmDdiCalcPrivateElementLayoutSize;
WDDMDDI_CREATEELEMENTLAYOUT                         WddmDdiCreateElementLayout;
WDDMDDI_DESTROYELEMENTLAYOUT                        WddmDdiDestroyElementLayout;
WDDMDDI_CALCPRIVATEBLENDSTATESIZE                   WddmDdiCalcPrivateBlendStateSize;
WDDMDDI_CREATEBLENDSTATE                            WddmDdiCreateBlendState;
WDDMDDI_DESTROYBLENDSTATE                           WddmDdiDestroyBlendState;
WDDMDDI_CALCPRIVATEDEPTHSTENCILSTATESIZE            WddmDdiCalcPrivateDepthStencilStateSize;
WDDMDDI_CREATEDEPTHSTENCILSTATE                     WddmDdiCreateDepthStencilState;
WDDMDDI_DESTROYDEPTHSTENCILSTATE                    WddmDdiDestroyDepthStencilState;
WDDMDDI_CALCPRIVATERASTERIZERSTATESIZE              WddmDdiCalcPrivateRasterizerStateSize;
WDDMDDI_CREATERASTERIZERSTATE                       WddmDdiCreateRasterizerState;
WDDMDDI_DESTROYRASTERIZERSTATE                      WddmDdiDestroyRasterizerState;
WDDMDDI_CALCPRIVATESHADERSIZE                       WddmDdiCalcPrivateShaderSize;
WDDMDDI_CREATEVERTEXSHADER                          WddmDdiCreateVertexShader;
WDDMDDI_CREATEGEOMETRYSHADER                        WddmDdiCreateGeometryShader;
WDDMDDI_CREATEPIXELSHADER                           WddmDdiCreatePixelShader;
WDDMDDI_CALCPRIVATEGEOMETRYSHADERWITHSTREAMOUTPUT   WddmDdiCalcPrivateGeometryShaderWithStreamOutput;
WDDMDDI_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT        WddmDdiCreateGeometryShaderWithStreamOutput;
WDDMDDI_DESTROYSHADER                               WddmDdiDestroyShader;
WDDMDDI_CALCPRIVATESAMPLERSIZE                      WddmDdiCalcPrivateSamplerSize;
WDDMDDI_CREATESAMPLER                               WddmDdiCreateSampler;
WDDMDDI_DESTROYSAMPLER                              WddmDdiDestroySampler;
WDDMDDI_CALCPRIVATEQUERYSIZE                        WddmDdiCalcPrivateQuerySize;
WDDMDDI_CREATEQUERY                                 WddmDdiCreateQuery;
WDDMDDI_DESTROYQUERY                                WddmDdiDestroyQuery;
WDDMDDI_CHECKFORMATSUPPORT                          WddmDdiCheckFormatSupport;
WDDMDDI_CHECKMULTISAMPLEQUALITYLEVELS               WddmDdiCheckMultisampleQualityLevels;
WDDMDDI_CHECKCOUNTERINFO                            WddmDdiCheckCounterInfo;
WDDMDDI_CHECKCOUNTER                                WddmDdiCheckCounter;
WDDMDDI_DESTROYDEVICE                               WddmDdiDestroyDevice;
WDDMDDI_SETTEXTFILTERSIZE                           WddmDdiSetTextFilterSize;
WDDMDDI_RESOURCECOPY                                WddmDdiResourceConvert;
WDDMDDI_RESOURCECOPYREGION                          WddmDdiResourceConvertRegion;
WDDMDDI_RESETPRIMITIVEID                            WddmDdiResetPrimitiveID;
WDDMDDI_SETVERTEXPIPELINEOUTPUT                     WddmDdiSetVertexPipelineOutput;
WDDMDDI_DRAWINDEXEDINSTANCEDINDIRECT                WddmDdiDrawIndexedInstancedIndirect;
WDDMDDI_DRAWINSTANCEDINDIRECT                       WddmDdiDrawInstancedIndirect;
WDDMDDI_COMMANDLISTEXECUTE                          WddmDdiCommandListExecute;
WDDMDDI_SETSHADERRESOURCES                          WddmDdiHsSetShaderResources;
WDDMDDI_SETSHADER                                   WddmDdiHsSetShader;
WDDMDDI_SETSAMPLERS                                 WddmDdiHsSetSamplers;
WDDMDDI_SETCONSTANTBUFFERS                          WddmDdiHsSetConstantBuffers;
WDDMDDI_SETSHADERRESOURCES                          WddmDdiDsSetShaderResources;
WDDMDDI_SETSHADER                                   WddmDdiDsSetShader;
WDDMDDI_SETSAMPLERS                                 WddmDdiDsSetSamplers;
WDDMDDI_SETCONSTANTBUFFERS                          WddmDdiDsSetConstantBuffers;
WDDMDDI_CREATEHULLSHADER                            WddmDdiCreateHullShader;
WDDMDDI_CREATEDOMAINSHADER                          WddmDdiCreateDomainShader;
WDDMDDI_CHECKDEFERREDCONTEXTHANDLESIZES             WddmDdiCheckDeferredContextHandleSizes;
WDDMDDI_CALCDEFERREDCONTEXTHANDLESIZE               WddmDdiCalcDeferredContextHandleSize;
WDDMDDI_CALCPRIVATEDEFERREDCONTEXTSIZE              WddmDdiCalcPrivateDeferredContextSize;
WDDMDDI_CREATEDEFERREDCONTEXT                       WddmDdiCreateDeferredContext;
WDDMDDI_ABANDONCOMMANDLIST                          WddmDdiAbandonCommandList;
WDDMDDI_CALCPRIVATECOMMANDLISTSIZE                  WddmDdiCalcPrivateCommandListSize;
WDDMDDI_CREATECOMMANDLIST                           WddmDdiCreateCommandList;
WDDMDDI_DESTROYCOMMANDLIST                          WddmDdiDestroyCommandList;
WDDMDDI_CALCPRIVATETESSELLATIONSHADERSIZE           WddmDdiCalcPrivateTessellationShaderSize;
WDDMDDI_SETSHADER_WITH_IFACES                       WddmDdiPsSetShaderWithIfaces;
WDDMDDI_SETSHADER_WITH_IFACES                       WddmDdiVsSetShaderWithIfaces;
WDDMDDI_SETSHADER_WITH_IFACES                       WddmDdiGsSetShaderWithIfaces;
WDDMDDI_SETSHADER_WITH_IFACES                       WddmDdiHsSetShaderWithIfaces;
WDDMDDI_SETSHADER_WITH_IFACES                       WddmDdiDsSetShaderWithIfaces;
WDDMDDI_SETSHADER_WITH_IFACES                       WddmDdiCsSetShaderWithIfaces;
WDDMDDI_CREATECOMPUTESHADER                         WddmDdiCreateComputeShader;
WDDMDDI_SETSHADER                                   WddmDdiCsSetShader;
WDDMDDI_SETSHADERRESOURCES                          WddmDdiCsSetShaderResources;
WDDMDDI_SETSAMPLERS                                 WddmDdiCsSetSamplers;
WDDMDDI_SETCONSTANTBUFFERS                          WddmDdiCsSetConstantBuffers;
WDDMDDI_CALCPRIVATEUNORDEREDACCESSVIEWSIZE          WddmDdiCalcPrivateUnorderedAccessViewSize;
WDDMDDI_CREATEUNORDEREDACCESSVIEW                   WddmDdiCreateUnorderedAccessView;
WDDMDDI_DESTROYUNORDEREDACCESSVIEW                  WddmDdiDestroyUnorderedAccessView;
WDDMDDI_CLEARUNORDEREDACCESSVIEWUINT                WddmDdiClearUnorderedAccessViewUint;
WDDMDDI_CLEARUNORDEREDACCESSVIEWFLOAT               WddmDdiClearUnorderedAccessViewFloat;
WDDMDDI_SETUNORDEREDACCESSVIEWS                     WddmDdiCsSetUnorderedAccessViews;
WDDMDDI_DISPATCH                                    WddmDdiDispatch;
WDDMDDI_DISPATCHINDIRECT                            WddmDdiDispatchIndirect;
WDDMDDI_SETRESOURCEMINLOD                           WddmDdiSetResourceMinLOD;
WDDMDDI_COPYSTRUCTURECOUNT                          WddmDdiCopyStructureCount;
WDDMDDI_RECYCLECOMMANDLIST                          WddmDdiRecycleCommandList;
WDDMDDI_RECYCLECREATECOMMANDLIST                    WddmDdiRecycleCreateCommandList;
WDDMDDI_RECYCLECREATEDEFERREDCONTEXT                WddmDdiRecycleCreateDeferredContext;
WDDMDDI_DESTROYCOMMANDLIST                          WddmDdiRecycleDestroyCommandList;
WDDMDDI_DISCARD                                     WddmDdiDiscard;
WDDMDDI_ASSIGNDEBUGBINARY                           WddmDdiAssignDebugBinary;
WDDMDDI_RESOURCEMAP                                 WddmDdiDynamicConstantBufferMapNoOverwrite;
WDDMDDI_CHECKDIRECTFLIPSUPPORT                      WddmDdiCheckDirectFlipSupport;
WDDMDDI_CLEARVIEW                                   WddmDdiClearView;
WDDMDDI_UPDATETILEMAPPINGS                          WddmDdiUpdateTileMappings;
WDDMDDI_COPYTILEMAPPINGS                            WddmDdiCopyTileMappings;
WDDMDDI_COPYTILES                                   WddmDdiCopyTiles;
WDDMDDI_UPDATETILES                                 WddmDdiUpdateTiles;
WDDMDDI_TILEDRESOURCEBARRIER                        WddmDdiTiledResourceBarrier;
WDDMDDI_GETMIPPACKING                               WddmDdiGetMipPacking;
WDDMDDI_RESIZETILEPOOL                              WddmDdiResizeTilePool;
WDDMDDI_SETMARKER                                   WddmDdiSetMarker;
WDDMDDI_SETMARKERMODE                               WddmDdiSetMarkerMode;
WDDMDDI_SETHARDWAREPROTECTION                       WddmDdiSetHardwareProtection;
WDDMDDI_GETRESOURCELAYOUT                           WddmDdiGetResourceLayout;
WDDMDDI_RETRIEVE_SHADER_COMMENT                     WddmDdiRetrieveShaderComment;
WDDMDDI_SETHARDWAREPROTECTIONSTATE                  WddmDdiSetHardwareProtectionState;
WDDMDDI_SYNC_TOKEN                                  WddmDdiAcquireResource;
WDDMDDI_SYNC_TOKEN                                  WddmDdiReleaseResource;
WDDMDDI_CALCPRIVATE_SHADERCACHE_SESSION_SIZE        WddmDdiCalcPrivateShaderCacheSessionSize;
WDDMDDI_CREATE_SHADERCACHE_SESSION                  WddmDdiCreateShaderCacheSession;
WDDMDDI_DESTROY_SHADERCACHE_SESSION                 WddmDdiDestroyShaderCacheSession;
WDDMDDI_SET_SHADERCACHE_SESSION                     WddmDdiSetShaderCacheSession;
WDDMDDI_QUERY_SCANOUT_CAPS                          WddmDdiQueryScanoutCaps;
WDDMDDI_PREPARE_SCANOUT_TRANSFORMATION              WddmDdiPrepareScanoutTransformation;

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device Infrastructure Function Declarations (DXGI1_6_1_DDI_BASE_FUNCTIONS) [DXGI1_6_1]

typedef HRESULT APIENTRY WDDMDDI_PRESENT(DXGI_DDI_ARG_PRESENT*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnPresent
typedef HRESULT APIENTRY WDDMDDI_GETGAMMACAPS(DXGI_DDI_ARG_GET_GAMMA_CONTROL_CAPS*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnGetGammaCaps
typedef HRESULT APIENTRY WDDMDDI_SETDISPLAYMODE(DXGI_DDI_ARG_SETDISPLAYMODE*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnSetDisplayMode
typedef HRESULT APIENTRY WDDMDDI_SETRESOURCEPRIORITY(DXGI_DDI_ARG_SETRESOURCEPRIORITY*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnSetResourcePriority
typedef HRESULT APIENTRY WDDMDDI_QUERYRESOURCERESIDENCY(DXGI_DDI_ARG_QUERYRESOURCERESIDENCY*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnQueryResourceResidency
typedef HRESULT APIENTRY WDDMDDI_ROTATERESOURCEIDENTITIES(DXGI_DDI_ARG_ROTATE_RESOURCE_IDENTITIES*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnRotateResourceIdentities
typedef HRESULT APIENTRY WDDMDDI_BLT(DXGI_DDI_ARG_BLT*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnBlt
typedef HRESULT APIENTRY WDDMDDI_RESOLVESHAREDRESOURCE(DXGI_DDI_ARG_RESOLVESHAREDRESOURCE*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnResolveSharedResource
typedef HRESULT APIENTRY WDDMDDI_BLT1(DXGI_DDI_ARG_BLT1*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnBlt1
typedef HRESULT APIENTRY WDDMDDI_OFFERRESOURCES1(DXGI_DDI_ARG_OFFERRESOURCES1*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnOfferResources1
typedef HRESULT APIENTRY WDDMDDI_RECLAIMRESOURCES(DXGI_DDI_ARG_RECLAIMRESOURCES*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnReclaimResources
typedef HRESULT APIENTRY WDDMDDI_GETMULTIPLANEOVERLAYCAPS(DXGI_DDI_ARG_GETMULTIPLANEOVERLAYCAPS*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnGetMultiplaneOverlayCaps
typedef HRESULT APIENTRY WDDMDDI_GETMULTIPLANEOVERLAYGROUPCAPS(DXGI_DDI_ARG_GETMULTIPLANEOVERLAYGROUPCAPS*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnGetMultiplaneOverlayGroupCaps
typedef HRESULT APIENTRY WDDMDDI_RESERVED1(void*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnReserved1
typedef HRESULT APIENTRY WDDMDDI_PRESENTMULTIPLANEOVERLAY(DXGI_DDI_ARG_PRESENTMULTIPLANEOVERLAY*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnPresentMultiplaneOverlay
typedef HRESULT APIENTRY WDDMDDI_RESERVED2(void*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnReserved2
typedef HRESULT APIENTRY WDDMDDI_PRESENT1(DXGI1_6_1_DDI_ARG_PRESENT*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnPresent1
typedef HRESULT APIENTRY WDDMDDI_CHECKPRESENTDURATIONSUPPORT(DXGI_DDI_ARG_CHECKPRESENTDURATIONSUPPORT*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnCheckPresentDurationSupport
typedef HRESULT APIENTRY WDDMDDI_TRIMRESIDENCYSET(DXGI_DDI_ARG_TRIMRESIDENCYSET*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnTrimResidencySet
typedef HRESULT APIENTRY WDDMDDI_CHECKMULTIPLANEOVERLAYCOLORSPACESUPPORT(DXGI_DDI_ARG_CHECKMULTIPLANEOVERLAYCOLORSPACESUPPORT*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnCheckMultiplaneOverlayColorSpaceSupport
typedef HRESULT APIENTRY WDDMDDI_PRESENTMULTIPLANEOVERLAY1(DXGI1_6_1_DDI_ARG_PRESENTMULTIPLANEOVERLAY*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnPresentMultiplaneOverlay1
typedef HRESULT APIENTRY WDDMDDI_RECLAIMRESOURCES1(DXGI_DDI_ARG_RECLAIMRESOURCES1*); //DXGI1_6_1_DDI_BASE_FUNCTIONS->pfnReclaimResources1

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device Infrastructure Functions (DXGI1_6_1_DDI_BASE_FUNCTIONS) [DXGI1_6_1]

WDDMDDI_PRESENT                                   WddmDdiPresent;
WDDMDDI_GETGAMMACAPS                              WddmDdiGetGammaCaps;
WDDMDDI_SETDISPLAYMODE                            WddmDdiSetDisplayMode;
WDDMDDI_SETRESOURCEPRIORITY                       WddmDdiSetResourcePriority;
WDDMDDI_QUERYRESOURCERESIDENCY                    WddmDdiQueryResourceResidency;
WDDMDDI_ROTATERESOURCEIDENTITIES                  WddmDdiRotateResourceIdentities;
WDDMDDI_BLT                                       WddmDdiBlt;
WDDMDDI_RESOLVESHAREDRESOURCE                     WddmDdiResolveSharedResource;
WDDMDDI_BLT1                                      WddmDdiBlt1;
WDDMDDI_OFFERRESOURCES1                           WddmDdiOfferResources1;
WDDMDDI_RECLAIMRESOURCES                          WddmDdiReclaimResources;
WDDMDDI_GETMULTIPLANEOVERLAYCAPS                  WddmDdiGetMultiplaneOverlayCaps;
WDDMDDI_GETMULTIPLANEOVERLAYGROUPCAPS             WddmDdiGetMultiplaneOverlayGroupCaps;
WDDMDDI_RESERVED1                                 WddmDdiReserved1;
WDDMDDI_PRESENTMULTIPLANEOVERLAY                  WddmDdiPresentMultiplaneOverlay;
WDDMDDI_RESERVED2                                 WddmDdiReserved2;
WDDMDDI_PRESENT1                                  WddmDdiPresent1;
WDDMDDI_CHECKPRESENTDURATIONSUPPORT               WddmDdiCheckPresentDurationSupport;
WDDMDDI_TRIMRESIDENCYSET                          WddmDdiTrimResidencySet;
WDDMDDI_CHECKMULTIPLANEOVERLAYCOLORSPACESUPPORT   WddmDdiCheckMultiplaneOverlayColorSpaceSupport;
WDDMDDI_PRESENTMULTIPLANEOVERLAY1                 WddmDdiPresentMultiplaneOverlay1;
WDDMDDI_RECLAIMRESOURCES1                         WddmDdiReclaimResources1;

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device Infrastructure Callback Declarations (DXGI_DDI_BASE_CALLBACKS) [DXGI]

typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_PRESENT_CB(_In_ HANDLE hDevice, _In_ DXGIDDICB_PRESENT*); //PFNDDXGIDDI_PRESENTCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_PRESENT_MULTIPLANE_OVERLAY_CB(_In_ HANDLE hDevice, _In_ CONST DXGIDDICB_PRESENT_MULTIPLANE_OVERLAY*); //PFNDDXGIDDI_PRESENT_MULTIPLANE_OVERLAYCB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_PRESENT_MULTIPLANE_OVERLAY1_CB(_In_ HANDLE hDevice, _In_ CONST DXGIDDICB_PRESENT_MULTIPLANE_OVERLAY1*); //PFNDDXGIDDI_PRESENT_MULTIPLANE_OVERLAY1CB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SUBMITPRESENTBLTTOHWQUEUE_CB(_In_ HANDLE hDevice, _In_ DXGIDDICB_SUBMITPRESENTBLTTOHWQUEUE*); //PFNDDXGIDDI_SUBMITPRESENTBLTTOHWQUEUECB
typedef _Check_return_ HRESULT APIENTRY CALLBACK WDDMDDI_SUBMITPRESENTTOHWQUEUE_CB(_In_ HANDLE hDevice, _In_ DXGIDDICB_SUBMITPRESENTTOHWQUEUE*); //PFNDDXGIDDI_SUBMITPRESENTTOHWQUEUECB

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device Infrastructure Callbacks (DXGI_DDI_BASE_CALLBACKS) [DXGI]

WDDMDDI_PRESENT_CB                       WddmDdiPresentCb;
WDDMDDI_PRESENT_MULTIPLANE_OVERLAY_CB    WddmDdiPresentMultiplaneOverlayCb;
WDDMDDI_PRESENT_MULTIPLANE_OVERLAY1_CB   WddmDdiPresentMultiplaneOverlay1Cb;
WDDMDDI_SUBMITPRESENTBLTTOHWQUEUE_CB     WddmDdiSubmitPresentBltToHwQueueCb;
WDDMDDI_SUBMITPRESENTTOHWQUEUE_CB        WddmDdiSubmitPresentToHwQueueCb;

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device User Callback Declarations (D3DWDDM2_6DDI_CORELAYER_DEVICECALLBACKS) [WDDM2_6]

typedef VOID APIENTRY CALLBACK WDDMDDI_SETERROR_CB(D3D10DDI_HRTCORELAYER, HRESULT); //PFND3D10DDI_SETERROR_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_VS_CONSTBUF_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_VS_CONSTBUF_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_PS_SRV_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_PS_SRV_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_PS_SHADER_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_PS_SHADER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_PS_SAMPLER_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_PS_SAMPLER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_VS_SHADER_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_VS_SHADER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_PS_CONSTBUF_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_PS_CONSTBUF_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_IA_INPUTLAYOUT_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_IA_INPUTLAYOUT_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_IA_VERTEXBUF_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_IA_VERTEXBUF_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_IA_INDEXBUF_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_IA_INDEXBUF_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_GS_CONSTBUF_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_GS_CONSTBUF_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_GS_SHADER_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_GS_SHADER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_IA_PRIMITIVE_TOPOLOGY_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_IA_PRIMITIVE_TOPOLOGY_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_VS_SRV_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_VS_SRV_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_VS_SAMPLER_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_VS_SAMPLER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_GS_SRV_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_GS_SRV_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_GS_SAMPLER_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D10DDI_STATE_GS_SAMPLER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_OM_RENDERTARGETS_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_OM_RENDERTARGETS_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_OM_BLENDSTATE_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_OM_BLENDSTATE_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_OM_DEPTHSTATE_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_OM_DEPTHSTATE_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_RS_RASTSTATE_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_RS_RASTSTATE_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_SO_TARGETS_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_SO_TARGETS_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_RS_VIEWPORTS_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_RS_VIEWPORTS_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_RS_SCISSOR_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_RS_SCISSOR_CB
typedef void APIENTRY CALLBACK WDDMDDI_DISABLE_DEFERRED_STAGING_RESOURCE_DESTRUCTION_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_DISABLE_DEFERRED_STAGING_RESOURCE_DESTRUCTION_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_TEXTFILTERSIZE_CB(D3D10DDI_HRTCORELAYER); //PFND3D10DDI_STATE_TEXTFILTERSIZE_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_HS_SRV_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_HS_SRV_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_HS_SHADER_CB(D3D10DDI_HRTCORELAYER); //PFND3D11DDI_STATE_HS_SHADER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_HS_SAMPLER_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_HS_SAMPLER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_HS_CONSTBUF_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_HS_CONSTBUF_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_DS_SRV_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_DS_SRV_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_DS_SHADER_CB(D3D10DDI_HRTCORELAYER); //PFND3D11DDI_STATE_DS_SHADER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_DS_SAMPLER_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_DS_SAMPLER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_DS_CONSTBUF_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_DS_CONSTBUF_CB
typedef void APIENTRY CALLBACK WDDMDDI_PERFORM_AMORTIZED_PROCESSING_CB(D3D10DDI_HRTCORELAYER); //PFND3D11DDI_PERFORM_AMORTIZED_PROCESSING_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_CS_SRV_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_CS_SRV_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_CS_UAV_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_CS_UAV_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_CS_SHADER_CB(D3D10DDI_HRTCORELAYER); //PFND3D11DDI_STATE_CS_SHADER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_CS_SAMPLER_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_CS_SAMPLER_CB
typedef void APIENTRY CALLBACK WDDMDDI_STATE_CS_CONSTBUF_CB(D3D10DDI_HRTCORELAYER, UINT, UINT); //PFND3D11DDI_STATE_CS_CONSTBUF_CB

#pragma endregion
//--------------------------------------------------------------------------------------------------------
#pragma region //Device User Callbacks (D3DWDDM2_6DDI_CORELAYER_DEVICECALLBACKS) [WDDM2_6]

WDDMDDI_SETERROR_CB                                        WddmDdiSetErrorCb;
WDDMDDI_STATE_VS_CONSTBUF_CB                               WddmDdiStateVsConstBufCb;
WDDMDDI_STATE_PS_SRV_CB                                    WddmDdiStatePsSrvCb;
WDDMDDI_STATE_PS_SHADER_CB                                 WddmDdiStatePsShaderCb;
WDDMDDI_STATE_PS_SAMPLER_CB                                WddmDdiStatePsSamplerCb;
WDDMDDI_STATE_VS_SHADER_CB                                 WddmDdiStateVsShaderCb;
WDDMDDI_STATE_PS_CONSTBUF_CB                               WddmDdiStatePsConstBufCb;
WDDMDDI_STATE_IA_INPUTLAYOUT_CB                            WddmDdiStateIaInputLayoutCb;
WDDMDDI_STATE_IA_VERTEXBUF_CB                              WddmDdiStateIaVertexBufCb;
WDDMDDI_STATE_IA_INDEXBUF_CB                               WddmDdiStateIaIndexBufCb;
WDDMDDI_STATE_GS_CONSTBUF_CB                               WddmDdiStateGsConstBufCb;
WDDMDDI_STATE_GS_SHADER_CB                                 WddmDdiStateGsShaderCb;
WDDMDDI_STATE_IA_PRIMITIVE_TOPOLOGY_CB                     WddmDdiStateIaPrimitiveTopologyCb;
WDDMDDI_STATE_VS_SRV_CB                                    WddmDdiStateVsSrvCb;
WDDMDDI_STATE_VS_SAMPLER_CB                                WddmDdiStateVsSamplerCb;
WDDMDDI_STATE_GS_SRV_CB                                    WddmDdiStateGsSrvCb;
WDDMDDI_STATE_GS_SAMPLER_CB                                WddmDdiStateGsSamplerCb;
WDDMDDI_STATE_OM_RENDERTARGETS_CB                          WddmDdiStateOmRenderTargetsCb;
WDDMDDI_STATE_OM_BLENDSTATE_CB                             WddmDdiStateOmBlendStateCb;
WDDMDDI_STATE_OM_DEPTHSTATE_CB                             WddmDdiStateOmDepthStateCb;
WDDMDDI_STATE_RS_RASTSTATE_CB                              WddmDdiStateRsRastStateCb;
WDDMDDI_STATE_SO_TARGETS_CB                                WddmDdiStateSoTargetsCb;
WDDMDDI_STATE_RS_VIEWPORTS_CB                              WddmDdiStateRsViewportsCb;
WDDMDDI_STATE_RS_SCISSOR_CB                                WddmDdiStateRsScissorCb;
WDDMDDI_DISABLE_DEFERRED_STAGING_RESOURCE_DESTRUCTION_CB   WddmDdiDisableDeferredStagingResourceDestruction;
WDDMDDI_STATE_TEXTFILTERSIZE_CB                            WddmDdiStateTextFilterSizeCb;
WDDMDDI_STATE_HS_SRV_CB                                    WddmDdiStateHsSrvCb;
WDDMDDI_STATE_HS_SHADER_CB                                 WddmDdiStateHsShaderCb;
WDDMDDI_STATE_HS_SAMPLER_CB                                WddmDdiStateHsSamplerCb;
WDDMDDI_STATE_HS_CONSTBUF_CB                               WddmDdiStateHsConstBufCb;
WDDMDDI_STATE_DS_SRV_CB                                    WddmDdiStateDsSrvCb;
WDDMDDI_STATE_DS_SHADER_CB                                 WddmDdiStateDsShaderCb;
WDDMDDI_STATE_DS_SAMPLER_CB                                WddmDdiStateDsSamplerCb;
WDDMDDI_STATE_DS_CONSTBUF_CB                               WddmDdiStateDsConstBufCb;
WDDMDDI_PERFORM_AMORTIZED_PROCESSING_CB                    WddmDdiPerformAmortizedProcessingCb;
WDDMDDI_STATE_CS_SRV_CB                                    WddmDdiStateCsSrvCb;
WDDMDDI_STATE_CS_UAV_CB                                    WddmDdiStateCsUavCb;
WDDMDDI_STATE_CS_SHADER_CB                                 WddmDdiStateCsShaderCb;
WDDMDDI_STATE_CS_SAMPLER_CB                                WddmDdiStateCsSamplerCb;
WDDMDDI_STATE_CS_CONSTBUF_CB                               WddmDdiStateCsConstBufCb;

#pragma endregion
//--------------------------------------------------------------------------------------------------------

typedef HRESULT APIENTRY WDDMDDI_RETRIEVESUBOBJECT(D3D10DDI_HDEVICE, _In_ UINT32 SubDeviceID, _In_ SIZE_T ParamSize, _In_reads_bytes_opt_(ParamSize) void* pParams, _In_ SIZE_T OutputParamSize, _Out_writes_bytes_(OutputParamSize) void* pOutputParamsBuffer); //PFND3D10DDI_RETRIEVESUBOBJECT
WDDMDDI_RETRIEVESUBOBJECT   WddmDdiRetrieveSubObject;

#endif//_D3DDDI_HXX_